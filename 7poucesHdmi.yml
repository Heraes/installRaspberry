---
- hosts: Pi7P
  remote_user: sysop
  become: yes
  tasks:
    - name: Maj dépôts
      apt:
        upgrade: yes
        update_cache: yes

    - name: install git
      apt:
        name: git
        state: present

    - name: install "7zip"
      apt:
        name: p7zip-full
        state: present

    - name: install "xserver-xorg"
      apt:
        name: xserver-xorg
        state: present

    - name: install "x11-xserver-utils"
      apt:
        name: x11-xserver-utils
        state: present

    - name: install "xinit"
      apt:
        name: xinit
        state: present

    - name: install "xserver-xorg-video-fbturbo"
      apt:
        name: xserver-xorg-video-fbturbo
        state: present

    - name: install "xdotool"
      apt:
        name: xdotool
        state: present

    - name: install "openbox"
      apt:
        name: openbox
        state: present

    - name: install "chromium-browser"
      apt:
        name: chromium-browser
        state: present

    - name: Lire fichier .bashrc
      shell: cat /home/sysop/.bashrc
      register: startx_command

    - name: Ajout lancement serveur X (startx)
      shell: |
        echo 'export TYPE_SERVEUR_NFC={{ nfc }}' >> /home/sysop/.bashrc
        echo '#modif bashrc = ok' >> /home/sysop/.bashrc
        echo '[[ -z $DISPLAY && $XDG_VTNR -eq 1 ]] && startx -- -nocursor' >> /home/sysop/.bashrc        
      when: startx_command.stdout.find('#modif bashrc = ok') == -1

    - name: Copie du fichier autostart
      copy:
        src: ./autostart
        dest: /home/sysop/autostart
        owner: sysop
        group: sysop
        mode: '0770'
        backup: yes

    - name: Remplacer le fichier autostart
      shell:
        cmd: cp /home/sysop/autostart /etc/xdg/openbox/autostart


#    config de l ecran
    - name: Création du dossier repos "LCD-show"
      file:
        path: /home/sysop/LCD-show
        state: directory
        mode: '0775'

    - name: Rapatrier le driver de l'écran
      git:
        repo: https://github.com/goodtft/LCD-show.git
        dest: /home/sysop/LCD-show/
        clone: yes
        update: no

    - name: Configuration écran 1024x600 pixels!
      replace:
        path: /home/sysop/LCD-show/LCD7C-show
        regexp: '^sudo reboot$'
        replace: '#remove reboot'


    - name: Rendre exécutable le fichier de configuration 1024x600
      shell: |
        chmod +x LCD7C-show
        ./LCD7C-show
        echo "hdmi:capacity:7C-1024x600:0:1024:600" > /root/.have_installed        
      args:
        chdir: /home/sysop/LCD-show/




    - name: Configuration de xorg en fonction rotate = 
      shell: |
        sed -i '/Option "CalibrationMatrix"/c        Option "CalibrationMatrix" "0 1 0 -1 0 1 0 0 1"' /etc/X11/xorg.conf.d/40-libinput.conf
      when: rotate == 1
      shell: | 
        sed -i '/Option "CalibrationMatrix"/c        Option "CalibrationMatrix" "0 -1 1 1 0 0 0 0 1"' /etc/X11/xorg.conf.d/40-libinput.conf
      when: rotate == 3

    - name: Configuration de config.txt
      shell: |
        echo "display_rotate={{ rotate }}" >> /boot/config.txt       
      

### Cas NFC USB
    - name: install "libpcsclite1"
      apt:
        name: libpcsclite1
        state: present
      when: nfc == 'acr122u-u9'

    - name: install "libpcsclite-dev"
      apt:
        name: libpcsclite-dev
        state: present
      when: nfc == 'acr122u-u9'

    - name: install "pcscd"
      apt:
        name: pcscd
        state: present
      when: nfc == 'acr122u-u9'

    - name: install "pcsc-tools"
      apt:
        name: pcsc-tools
        state: present
      when: nfc == 'acr122u-u9'

    - name: Copie du fichier blacklist.conf (ne pas déscativer ses modules)
      copy:
        src: ./blacklist.conf
        dest: /etc/modprobe.d/blacklist.conf
        owner: sysop
        group: sysop
        mode: '0644'
        backup: yes
      when: nfc == 'acr122u-u9'
#### Fin Nfc USB

#### Cas GPIO
    - name: Changer le propriétaire et le groupe dupériphérique
      shell: chown root:gpio /dev/gpiomem

    - name: Configurer les droits du groupe en lecture ecriture
      shell: chmod g+rw /dev/gpiomem

    - name: Ajout de l'utilisateur au groupe gpio
      shell: usermod -a -G gpio $USER

    - name: Ajout de l'utilisateur au groupe spi
      shell: usermod -a -G spi $USER

    - name: Ajout de l'utilisateur au groupe netdev
      shell: usermod -a -G netdev $USER
      
#### Fin GPIO      

    - name: Ajout du dépot nodes js
      shell: curl -sL https://deb.nodesource.com/setup_16.x | sudo -E bash -

    - name: install "nodejs"
      apt:
        name: nodejs
        state: present

    - name: Pour nodejs, installation de "gcc" pour la compilation
      apt:
        name: gcc
        state: present

    - name: Pour nodejs, installation de "g++" pour la compilation
      apt:
        name: g++
        state: present

    - name: Pour nodejs, installation de "make" pour la compilation
      apt:
        name: make
        state: present

    - name: Pour nodejs, installation de "apt-transport-https" pour la compilation
      apt:
        name: apt-transport-https
        state: present

    - name: Copie du fichier serveurNfc.7z
      copy:
        src: ./serveurNfc.7z
        dest: /home/sysop/serveurNfc.7z
        owner: sysop
        group: sysop
        backup: yes
#      when: nfc == 'acr122u-u9'

    - name: décompresser le fichier serveurNfc.7z
      shell: |
        7z x serveurNfc.7z
        chmod -R 774 serveurNfcNodeJsVma405
        chown -R root:sysop  serveurNfcNodeJsVma405         
      args:
        chdir: /home/sysop/
#      when: nfc == 'acr122u-u9'

    - name: Installer les modules node js pour serveurNfc
      shell:
        cmd: npm i
      args:
        chdir: /home/sysop/serveurNfcNodeJsVma405/
#      when: nfc == 'acr122u-u9'

    - name: Maj .chromium_env
      shell: |
        sed -i "/^hostname = */c hostname = {{ hostname }}" /home/sysop/serveurNfcNodeJsVma405/.chromium_env
        sed -i "/^front_type = */c front_type = {{ frontType }}" /home/sysop/serveurNfcNodeJsVma405/.chromium_env
        sed -i "/^password = */c password = {{ password }}" /home/sysop/serveurNfcNodeJsVma405/.chromium_env
        sed -i "/^token = */c token = {{ token }}" /home/sysop/serveurNfcNodeJsVma405/.chromium_env
        sed -i "/^url = */c url = {{ protocole }}://{{ serveur }}/wv/login_hardware" /home/sysop/serveurNfcNodeJsVma405/.chromium_env        
 #     when: nfc == 'acr122u-u9'


    - name: Autologin
      shell:
        cmd: raspi-config nonint do_boot_behaviour B2
##### Ajout :
    

#    - name: Ajouter la rotation de 90° au fichier de configuration /boot/config.txt
#      shell:
#        cmd: echo "display_rotate=3 " >> /boot/config.txt
    - name: installe "splash screen"
      apt:
        name: rpd-plym-splash
        state: present

    - name: Installation de "fbi", pour visualiser le splash screen(logo)
      apt:
        name: fbi
        state: present


    - name: Copie du fichier image splash.png
      copy:
        src: ./splash.png
        dest: /home/sysop/splash.png
        owner: sysop
        group: sysop
        backup: yes

    - name: Suppression du logo raspberry pi, modification du fichier /boot/cmdline.txt
      shell:
        cmd: echo "\nconsoleblank=0 loglevel=1 quiet logo.nologo" >> /boot/cmdline.txt

    - name: Autoriser startx
      shell:
        cmd: sed -i "s/quiet splash plymouth.ignore-serial-consoles//" /boot/cmdline.txt

    - name: Copie du fichier du service "splashscreen.service"
      copy:
        src: ./splashscreen.service
        dest: /etc/systemd/system/splashscreen.service
        owner: sysop
        group: sysop
        mode: '0770'
        backup: yes

    - name: Activer "splashscreen.service"
      shell:
        cmd: sudo systemctl enable splashscreen.service

    - name: Démarrer "splashscreen.service"
      shell:
        cmd: sudo systemctl start splashscreen.service








    - name: Redémarrage !
      reboot:    
